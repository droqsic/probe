name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go: ["1.24"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Cache Go build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Verify go.mod tidy
        run: |
          go mod tidy
          git diff --exit-code || (echo "Run 'go mod tidy'" && exit 1)

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./tests/...

      - name: Generate coverage report
        run: go test -coverpkg="github.com/droqsic/probe" -coverprofile=coverage.txt -covermode=atomic ./tests/...
        shell: bash

      - name: Verify coverage file exists
        run: |
          if [ ! -f coverage.txt ]; then
            echo "Coverage file was not generated!"
            exit 1
          fi
        shell: bash

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          slug: droqsic/probe
          fail_ci_if_error: false

      - name: Benchmark
        run: |
          if ($env:CI -eq "true") {
            go test -v -bench=. ./tests/benchmark/...
          }
        shell: pwsh

      - name: Vet
        run: go vet ./...

      - name: Lint
        run: |
          go fmt ./...
          go vet ./...
